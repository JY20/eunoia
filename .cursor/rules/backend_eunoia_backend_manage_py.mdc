---
description: This Python script is Django's command-line utility for administrative tasks within the `eunoia_backend` project. It serves as the primary way to interact with and manage the Django project from the terminal.
globs: 
alwaysApply: false
---
# Summary of `backend/eunoia_backend/manage.py`

This Python script is Django's command-line utility for administrative tasks within the `eunoia_backend` project. It serves as the primary way to interact with and manage the Django project from the terminal.

**Key Functions:**

*   **Sets Environment Variable:** It ensures that the `DJANGO_SETTINGS_MODULE` environment variable is set to `eunoia_backend.settings`. This tells Django where to find the project's settings file.
*   **Imports `execute_from_command_line`:** It attempts to import the `execute_from_command_line` function from `django.core.management`. This function is responsible for parsing command-line arguments and executing the corresponding Django management commands.
*   **Error Handling:** If Django cannot be imported (e.g., not installed or virtual environment not activated), it raises an `ImportError` with a helpful message.
*   **Executes Commands:** It passes the command-line arguments (`sys.argv`) to `execute_from_command_line`, which then runs the specified Django command.

**Common Uses:**

Developers use `manage.py` for a variety of tasks, including:

*   `python manage.py runserver`: Starting the development server.
*   `python manage.py migrate`: Applying database migrations.
*   `python manage.py makemigrations`: Creating new database migrations based on model changes.
*   `python manage.py createsuperuser`: Creating an administrator account.
*   `python manage.py startapp <app_name>`: Creating a new Django app within the project.
*   `python manage.py shell`: Opening an interactive Python shell with the Django project's context loaded.
*   `python manage.py test`: Running automated tests.

This script is essential for the development and maintenance of the Django application.
