"""
Django settings for eunoia_backend project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# # Load .env file from the project root (one level up from BASE_DIR if settings.py is in a subdirectory)
# # Or adjust the path to your .env file if it's located elsewhere relative to settings.py
# # Assuming .env is in the same directory as manage.py, which is BASE_DIR.parent for this structure
# # If your .env is at BASE_DIR (alongside manage.py), then it should be: load_dotenv(BASE_DIR / '.env')
# # Given the project structure, manage.py is likely at BASE_DIR.parent if BASE_DIR is eunoia_backend/eunoia_backend
# # Let's assume .env is in the root of the *Django project* (eunoia_backend folder)
# # So, if BASE_DIR = eunoia_backend/eunoia_backend, then .env is at BASE_DIR.parent
# # If .env is at the absolute root of the repo (alongside the backend/ folder), the path needs to be BASE_DIR.parent.parent
# # For now, let's assume .env is at the Django project root (backend/eunoia_backend/.env)
# # This would usually be BASE_DIR itself if settings.py is directly in the project root.
# # Correct path if .env is in the same directory as manage.py (which is parent of eunoia_backend dir that contains settings.py):
# # load_dotenv(BASE_DIR.parent / '.env')
# # The error shows the project root is /c%3A/Users/aleja/OneDrive/Escritorio/eunoia/
# # And settings.py is at /c%3A/Users/aleja/OneDrive/Escritorio/eunoia/backend/eunoia_backend/eunoia_backend/settings.py
# # So BASE_DIR is eunoia/backend/eunoia_backend/eunoia_backend
# # .env is likely at eunoia/.env
# # So, the path would be BASE_DIR.parent.parent.parent / '.env'

# # Let's try to be robust: check a few common locations for .env
# dotenv_path_project_root = BASE_DIR.parent / '.env' # e.g., backend/eunoia_backend/.env
# dotenv_path_repo_root = BASE_DIR.parent.parent / '.env' # e.g., backend/.env
# dotenv_path_workspace_root = BASE_DIR.parent.parent.parent / '.env' # e.g., eunoia/.env

# if dotenv_path_workspace_root.exists():
#     load_dotenv(dotenv_path_workspace_root)
#     print(f"Loaded .env from {dotenv_path_workspace_root}")
# elif dotenv_path_repo_root.exists():
#     load_dotenv(dotenv_path_repo_root)
#     print(f"Loaded .env from {dotenv_path_repo_root}")
# elif dotenv_path_project_root.exists():
#     load_dotenv(dotenv_path_project_root)
#     print(f"Loaded .env from {dotenv_path_project_root}")
# else:
#     print("Warning: .env file not found in common locations. OPENAI_API_KEY might not be loaded.")

## just load dotenv
load_dotenv()
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#da0k)&*ea)01gqr)3a_7$g#166x#&q2!$-2if+3zr#a6m(jy6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['eunoia.work', 'www.eunoia.work', 'localhost', '127.0.0.1', '52.37.227.112', 'ec2-52-37-227-112.us-west-2.compute.amazonaws.com']

# OpenAI API Key
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')

if not OPENAI_API_KEY:
    print("Warning: OPENAI_API_KEY not found in environment variables after attempting to load .env. Please ensure it is set.")


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'rest_framework',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'eunoia_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'eunoia_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS settings
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
}
